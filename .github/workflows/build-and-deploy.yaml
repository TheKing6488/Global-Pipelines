name: Build and Deploy All Dockerfiles

on:
  workflow_call:
    inputs:
     version:
      type: string
      description: 'version for the docker image'
      required: true

jobs:
  find-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      dockerfiles: ${{ steps.get_files.outputs.dockerfiles }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Find all Dockerfiles
        id: get_files
        run: |
          # Search for files that begin with “Dockerfile”
           dockerfiles=$(find . -type f -name 'Dockerfile*')
          echo "Dockerfiles found:"
          echo "$dockerfiles"
          # Create a JSON array from the files found
          files_json=$(echo "$dockerfiles" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "$files_json"
          echo "dockerfiles=$files_json" >> $GITHUB_OUTPUT
  build-dockerfiles:
    needs: find-dockerfiles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile_path: ${{ fromJson(needs.find-dockerfiles.outputs.dockerfiles) }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Convert repository name to lowercase letters
        id: lowercase_repo
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV

      - name: Bei GitHub Container Registry anmelden
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Docker Image bauen und pushen
        id: build_push
        run: |
          echo "Build image for Dockerfile: ${{ matrix.dockerfile_path }}"
          docker build ${{ matrix.dockerfile_path }} \
            -t ghcr.io/${{ env.REPO_NAME }}:${{inputs.version}} \
            -t ghcr.io/${{ env.REPO_NAME }}:latest
          docker push ghcr.io/${{ env.REPO_NAME }}:${{inputs.version}}
          docker push ghcr.io/${{ env.REPO_NAME }}:latest