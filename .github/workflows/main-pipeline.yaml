name: Main Pipeline

on:
  workflow_call:

jobs:
  mirror-repo:
    uses: ./.github/workflows/mirror-to-other-repos.yaml
    secrets: inherit
  deploy-prod:
    # This job only runs if the pushed branch is "main"
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Get Next Version
        id: get_next_version
        uses: thenativeweb/get-next-version@main

      - name: set git configs
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: create tag
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        run: |
          NEXT_VERSION=${{ steps.get_next_version.outputs.version }}
          git tag -a $NEXT_VERSION -m ""
          git push origin $NEXT_VERSION

      - name: create new release
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GH_PAT }}
          tag: ${{ steps.get_next_version.outputs.version }}
          body: "- Docker image: https://$GITHUB_CONTAINER_REGISTRY:${{ steps.get_next_version.outputs.version }}"

      # Optionally, add additional production-specific steps here (e.g. build tasks, asset generation, etc.)
      - name: Deploy To Coolify Production
        run: |
          echo "Running production scripts..."
          bash ./scripts/bash/deploy-to-coolify.sh prod
        env:
          PROD_COOLIFY_WEBHOOK: ${{ secrets.PROD_COOLIFY_WEBHOOK }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}

  deploy-dev:
    # This job runs for any branch that is not "main"
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        # Checkout the repository to the runner

      # Optionally, add additional development-specific steps here (e.g. testing, building dev artifacts, etc.)
      - name: Deploy To Coolify Development
        run: |
          echo "Running development scripts..."
          bash ./scripts/bash/deploy-to-coolify.sh dev
        env:
          DEV_COOLIFY_WEBHOOK: ${{ secrets.DEV_COOLIFY_WEBHOOK }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}
